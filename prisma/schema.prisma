generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserEntityType {
  individual
  business
}

enum BusinessType {
  WHOLESALER
  RETAILER
  RESELLER
  MANUFACTURER
  LANDLORD
  CONSULTANT_ADVISOR
  SERVICE_PROVIDER
  FREELANCER
  E_COMMERCE_BUSINESS
  AGGREGATOR
  FRANCHISE_OWNER
  DROPSHIPPER
  PROFESSIONAL_FIRM
  EVENT_ORGANISER
}

enum BusinessCategory {
  FMCG
  ELECTRONICS
  CLOTHING_AND_APPAREL
  INDUSTRIAL_SUPPLIES
  AGRICULTURAL_PRODUCTS
  PHARMACEUTICALS
  FURNITURE_AND_HOME_GOODS
}

model user {
  id                  String         @id @default(uuid()) @map("user_id") @db.Uuid
  easeBuzz_contact_id String?        @unique @map("easebuzz_contact_id") @db.VarChar
  profile_img_url     String?        @unique @map("profile_img_url") @db.VarChar
  entity_type         UserEntityType @default(individual) @map("entity_type")
  first_name          String?        @map("first_name")
  last_name           String?        @map("last_name")
  created_at          DateTime       @default(now()) @map("created_at")
  updated_at          DateTime       @updatedAt @map("updated_at")

  user_kyc             user_kyc?
  user_device_sessions user_device_session[]
  user_authentication  user_authentication?
  auth_otp             user_auth_otp?
  user_bank_accounts   user_bank_account[]
  user_upi_ids         user_upi_id[]

  user_business user_business?
}

model user_authentication {
  id       String  @id @map("user_id") @db.Uuid
  phone    String  @unique @map("phone_number") @db.VarChar(15)
  email    String? @map("email_id") @db.VarChar
  disabled Boolean @default(false) @map("disabled") @db.Boolean

  user user @relation(fields: [id], references: [id])
}

model user_device_session {
  id                  String    @id @default(uuid()) @db.Uuid
  device_name         String
  fb_installations_id String    @unique @map("firebase_installations_id") @db.VarChar
  fcm_token           String    @map("fcm_token") @db.VarChar
  expired             Boolean   @default(false) @map("expired")
  expired_at          DateTime?
  created_at          DateTime  @default(now()) @map("created_at")
  updated_at          DateTime  @updatedAt @map("updated_at")

  user    user   @relation(fields: [user_id], references: [id])
  user_id String @map("user_id") @db.Uuid
}

model user_kyc {
  id                String  @id @map("user_id") @db.Uuid
  adhaar_number     String  @map("adhaar_card_number")
  pan_number        String  @map("pan_card_number")
  pan_selfie_uri    String  @map("pan_card_selfie_uri")
  business_doc_uri  String? @map("business_document_uri")
  business_doc_type String? @map("business_document_type")

  user user @relation(fields: [id], references: [id])
}

model user_auth_otp {
  id         String   @id @map("user_id") @db.Uuid
  code       String   @map("code") @db.VarChar
  created_at DateTime @default(now()) @map("created_at")
  expires_at DateTime @map("expires_at")

  user user @relation(fields: [id], references: [id])
}

model user_bank_account {
  user_id             String  @map("user_id") @db.Uuid
  account_number      String  @map("accoun_number")
  ifsc                String  @map("ifsc")
  account_holder_name String  @map("account_holder_name")
  deleteable          Boolean @default(true) @map("deletable")
  beneficiary_id      String  @unique @map("beneficiary_id")

  user user @relation(fields: [user_id], references: [id])

  @@id([user_id, account_number, ifsc])
}

model user_upi_id {
  user_id          String  @map("user_id") @db.Uuid
  upi_handle       String  @map("upi_handle")
  deletable        Boolean @default(true) @map("deletable")
  beneficiary_id   String  @unique @map("beneficiary_id")
  beneficiary_name String  @map("beneficiary_name")

  created_at DateTime  @default(now()) @map("created_at")
  updated_at DateTime? @updatedAt @map("updated_at")
  user       user?     @relation(fields: [user_id], references: [id])

  @@id([user_id, upi_handle])
}

model user_business {
  id             String           @id @map("id") @db.Uuid
  name           String           @map("name")
  email          String           @map("email")
  type           BusinessType     @map("type")
  category       BusinessCategory @map("category")
  address_line_1 String           @map("address_line_1")
  address_line_2 String           @map("address_line_2")
  pincode        String           @map("pincode")
  city           String           @map("city")
  state          String           @map("state")
  landmark       String?          @map("landmark")

  user user @relation(fields: [id], references: [id])
}
